{"ast":null,"code":"var _jsxFileName = \"/Users/tarryn/repos/fullstack/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    sentence\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: sentence\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Heading;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst Stats = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Stats;\n\nconst Percentage = props => {\n  if (text == \"average\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else if (text == \"positive\" && value == NaN) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"0 %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c4 = Percentage;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      sentence: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      sentence: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"neautral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"all\",\n      value: good + bad + neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Percentage, {\n      text: \"average\",\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Percentage, {\n      text: \"positive\",\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Stats\");\n$RefreshReg$(_c4, \"Percentage\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/tarryn/repos/fullstack/part1/src/App.js"],"names":["useState","Heading","sentence","Button","props","handleClick","text","Stats","value","Percentage","NaN","App","good","setGood","neutral","setNeutral","bad","setBad"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst Heading = ({sentence}) => (\n  <h1>{sentence}</h1>\n)\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n)\n\nconst Stats = ({text, value}) => (\n  <p>{text} {value}</p>\n)\n\nconst Percentage = (props) => {\n  if (text==\"average\"){\n    return (\n      <p>{text} {value}</p>\n    )\n  }\n  else if (text==\"positive\" && value==NaN){\n    return (\n      <p>0 %</p>\n    )\n  }\n  else {\n    return (\n      <p>{text} {value} %</p>\n    )\n  }\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Heading sentence=\"give feedback\"/>\n      <Button handleClick={() => setGood(good+1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral+1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad+1)} text=\"bad\"/>\n      <Heading sentence=\"statistics\"/>\n      <Stats text=\"good\" value={good}/>\n      <Stats text=\"neautral\" value={neutral}/>\n      <Stats text=\"bad\" value={bad}/>\n      <Stats text=\"all\" value={good+bad+neutral}/>\n      <Percentage text=\"average\" good={good} bad={bad} neutral={neutral} />\n      <Percentage text=\"positive\" good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}