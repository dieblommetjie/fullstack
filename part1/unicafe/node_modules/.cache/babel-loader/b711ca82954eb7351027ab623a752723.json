{"ast":null,"code":"var _jsxFileName = \"/Users/tarryn/repos/fullstack/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    sentence\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: sentence\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Heading;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst Percentage = _ref2 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref2;\n  //const text = props.text\n  const all = good + bad + neutral;\n  const averageGood = good / all;\n  const score = good - bad;\n  if (all == 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 24\n  }, this);else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"good \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"neautral \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bad \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"all \", all]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"average \", score / all]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", averageGood * 100]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = Percentage;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      sentence: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      sentence: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Percentage, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Percentage\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/tarryn/repos/fullstack/part1/src/App.js"],"names":["useState","Heading","sentence","Button","props","handleClick","text","Percentage","good","bad","neutral","all","averageGood","score","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,OAAO,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,sBACd;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADc;AAAA,CAAhB;;KAAMD,O;;AAIN,MAAME,MAAM,GAAIC,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YAAqCD,KAAK,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMH,M;;AAIN,MAAMI,UAAU,GAAG,SAAwB;AAAA,MAAvB;AAACC,IAAAA,IAAD;AAAMC,IAAAA,GAAN;AAAUC,IAAAA;AAAV,GAAuB;AACzC;AACA,QAAMC,GAAG,GAAGH,IAAI,GAACC,GAAL,GAASC,OAArB;AACA,QAAME,WAAW,GAAIJ,IAAD,GAAOG,GAA3B;AACA,QAAME,KAAK,GAAGL,IAAI,GAACC,GAAnB;AAEA,MAAIE,GAAG,IAAI,CAAX,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAd,KACI;AACF,wBACE;AAAA,8BACA;AAAA,4BAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCAAaE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,2BAAQD,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA,2BAAQE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAA,+BAAYE,KAAK,GAACF,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCAAaC,WAAW,GAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF,CAnBD;;MAAML,U;;AAsBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUM,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMQ,MAAN,IAAgBjB,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMe,OAAO,CAACP,IAAI,GAAC,CAAN,CAAlC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMQ,UAAU,CAACN,OAAO,GAAC,CAAT,CAArC;AAAkD,MAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMO,MAAM,CAACR,GAAG,GAAC,CAAL,CAAjC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAwB,MAAA,GAAG,EAAEC,GAA7B;AAAkC,MAAA,OAAO,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;GAAMI,G;;MAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\nconst Heading = ({sentence}) => (\n  <h1>{sentence}</h1>\n)\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n)\n\nconst Percentage = ({good,bad,neutral}) => {\n  //const text = props.text\n  const all = good+bad+neutral\n  const averageGood = (good)/all\n  const score = good-bad\n\n  if (all == 0) return <p>No feedback given</p>\n  else{\n    return(\n      <div>\n      <p>good {good}</p>\n      <p>neautral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      <p>average {score/all}</p>\n      <p>positive {averageGood*100}</p>\n      </div>\n    )\n  }\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Heading sentence=\"give feedback\"/>\n      <Button handleClick={() => setGood(good+1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral+1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad+1)} text=\"bad\"/>\n      <Heading sentence=\"statistics\"/>\n      <Percentage good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}